#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6
#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
    tapping-term-ms = <145>;
};

&lt {
    tapping-term-ms = <145>;
    quick-tap-ms = <0>;
    flavor = "balanced";
};

/ {
    combos {
        compatible = "zmk,combos";

        CAG {
            bindings = <&kp LA(LG(LCTRL))>;
            key-positions = <22 23 24>;
        };

        CG {
            bindings = <&kp LG(LEFT_CONTROL)>;
            key-positions = <22 24>;
        };

        CA {
            bindings = <&kp LA(LCTRL)>;
            key-positions = <22 23>;
        };

        change_lang_left {
            bindings = <&change_language>;
            key-positions = <11 12 13>;
        };

        change_lang_right {
            bindings = <&change_language>;
            key-positions = <18 19 20>;
        };

        mute {
            bindings = <&lt 3 C_MUTE>;
            key-positions = <16 28>;
        };
    };

    macros {
        change_language: change_language {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND>,
                <&macro_wait_time 10>,
                <&macro_press>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp SPACE>;

            label = "CHANGE_LANGUAGE";
        };
    };

    behaviors {
        arrow_left: arrow_left {
            compatible = "zmk,behavior-mod-morph";
            label = "ARROW_LEFT";
            bindings = <&kp H>, <&kp LEFT>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        arrow_down: arrow_down {
            compatible = "zmk,behavior-mod-morph";
            label = "ARROW_DOWN";
            bindings = <&kp J>, <&kp DOWN>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        arrow_up: arrow_up {
            compatible = "zmk,behavior-mod-morph";
            label = "ARROW_UP";
            bindings = <&kp K>, <&kp UP_ARROW>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        arrow_right: arrow_right {
            compatible = "zmk,behavior-mod-morph";
            label = "ARROW_RIGHT";
            bindings = <&kp L>, <&kp RIGHT>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        modm_F2: modm_F2 {
            compatible = "zmk,behavior-mod-morph";
            label = "MODM_F2";
            bindings = <&kp LS(LC(F2))>, <&kp LS(LC(F3))>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        modm_F4: modm_F4 {
            compatible = "zmk,behavior-mod-morph";
            label = "MODM_F4";
            bindings = <&kp LS(LC(F4))>, <&kp LS(LC(F5))>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        modm_F6: modm_F6 {
            compatible = "zmk,behavior-mod-morph";
            label = "MODM_F6";
            bindings = <&kp LS(LC(F6))>, <&kp LS(LC(F7))>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        modm_F8: modm_F8 {
            compatible = "zmk,behavior-mod-morph";
            label = "MODM_F8";
            bindings = <&kp LS(LC(F8))>, <&kp LS(LC(F9))>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        modm_F10: modm_F10 {
            compatible = "zmk,behavior-mod-morph";
            label = "MODM_F10";
            bindings = <&kp LS(LC(F10))>, <&kp LS(LC(F11))>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        screenshot_cursor: screenshot_cursor {
            compatible = "zmk,behavior-mod-morph";
            label = "SCREENSHOT_CURSOR";
            bindings = <&kp LS(LG(NUMBER_4))>, <&kp LS(LG(NUMBER_6))>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        screenshot_area: screenshot_area {
            compatible = "zmk,behavior-mod-morph";
            label = "SCREENSHOT_AREA";
            bindings = <&kp LS(LG(N5))>, <&kp LS(LG(N7))>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        scroll_up_down: scroll_up_down {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "SCROLL_UP_DOWN";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W           &kp E               &kp R        &kp T                                                 &kp Y        &kp U        &kp I      &kp O         &kp P
&mt LEFT_CONTROL A  &kp S           &kp D               &kp F        &kp G        &kp LS(LG(NUMBER_4))      &none          &arrow_left  &arrow_down  &arrow_up  &arrow_right  &kp MINUS
&mt LEFT_SHIFT Z    &mt LEFT_ALT X  &mt LEFT_COMMAND C  &kp V        &kp B        &none                     &none          &kp N        &kp M        &kp COMMA  &kp DOT       &mt RIGHT_SHIFT SLASH
&kp LEFT_CONTROL    &kp LEFT_ALT    &kp LEFT_COMMAND    &lt 1 SPACE  &lt 2 SPACE  &mo 4                     &kp BACKSPACE  &lt 2 ENTER                                        &to 0
            >;

            sensor-bindings = <&scroll_up_down SCRL_DOWN SCRL_UP>;
        };

        SYMBOL {
            bindings = <
&kp ESCAPE  &none              &kp F11  &kp LC(UP_ARROW)  &none                       &kp PIPE   &kp BACKSLASH      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL
&kp TAB     &kp LC(LS(EQUAL))  &none    &none             &none   &none       &none   &kp TILDE  &kp DOUBLE_QUOTES  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp COLON
&trans      &trans             &trans   &trans            &trans  &none       &none   &kp GRAVE  &kp SQT            &kp LEFT_BRACE        &kp RIGHT_BRACE        &mt RIGHT_SHIFT SEMICOLON
&trans      &trans             &trans   &trans            &trans  &trans      &trans  &trans                                                                     &trans
            >;
        };

        NUM {
            bindings = <
&kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                           &kp NUMBER_6  &kp N7         &kp N8        &kp N9                &kp N0
&kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT  &none       &none   &kp CARET     &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&trans           &trans        &trans        &trans        &trans       &none       &none   &trans        &trans         &none         &none                 &trans
&trans           &trans        &trans        &trans        &trans       &trans      &trans  &trans                                                           &trans
            >;
        };

        FN_APP {
            bindings = <
&kp LC(LS(F1))   &modm_F2         &modm_F4  &modm_F6   &modm_F8                                               &kp F1  &kp F2   &kp F3   &kp F4   &trans
&kp LS(LC(F12))  &kp LS(LC(F13))  &none     &modm_F10  &none     &kp LS(LG(NUMBER_4))      &kp C_VOLUME_UP    &kp F5  &kp F6   &kp F7   &kp F8   &trans
&trans           &none            &trans    &none      &none     &screenshot_area          &kp C_VOLUME_DOWN  &kp F9  &kp F10  &kp F11  &kp F12  &trans
&trans           &trans           &trans    &trans     &trans    &trans                    &trans             &trans                             &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mo 5   &mkp MB2  &to 0
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &tog 0
            >;
        };
    };
};
